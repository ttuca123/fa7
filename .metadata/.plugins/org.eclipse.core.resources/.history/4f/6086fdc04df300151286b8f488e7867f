package br.edu.fa7.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Persistence;

import org.hibernate.Session;

import br.edu.fa7.factory.HibernateFactory;

public class GenericDao<E> {

	EntityManager em;

	public GenericDao() {

		em = (EntityManager) Persistence.createEntityManagerFactory(
				"unidadePersistencia").createEntityManager();

	}

	public void salvar(E bm) throws Exception {
		Session session = HibernateFactory.getHibernateSession();
		session.getTransaction().begin();
		session.saveOrUpdate(bm);
		session.getTransaction().commit();
	}

	public void deletar(E bm) throws Exception {

		Session session = HibernateFactory.getHibernateSession();
		session.getTransaction().begin();
		session.delete(bm);
		session.getTransaction().commit();
	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	public List<E> listarTodos(Class bm) throws Exception {
		Session session = HibernateFactory.getHibernateSession();
		session.getTransaction().begin();

		List<E> lista = session.createQuery(
				"from " + bm.getName() + " e where e.heAtivo = true").list();

		session.beginTransaction().commit();
		return lista;
	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	public List<E> buscarByName(Class bm, String nome) throws Exception {
		Session session = HibernateFactory.getHibernateSession();
		session.getTransaction().begin();

		List<E> lista = session.createQuery(
				"from " + bm.getName() + " e where e.nome  =:" + nome).list();

		session.beginTransaction().commit();

		return lista;

	}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	public List<E> listarTodosComLimite(Class bm, Integer limite)
			throws Exception {
		Session session = HibernateFactory.getHibernateSession();
		return session
				.createQuery(
						"from " + bm.getName() + " e where e.heAtivo = true")
				.setMaxResults(limite).list();
	}

}
